* all times below include time to type in password manually, ~2 seconds
* all times are over internet to davidvollbracht.com
* all times are for atlanta rails project

to sync first time with avz, excluding .svn/: 9m48s
to sync again (no changes) time with avz:    0m9.3s
to sync again, undoing back to 12393:        0m11.7s
to sync again, upping from 12393 to 12429:   0m10.3s

to sync first time excluding .svn/,db/data_fixes/**,log/**,[redacted]/tools,tmp/**: 4m23s
to sync again excluding .svn/,db/data_fixes/**,log/**,[redacted]/tools,tmp/**:      0m8.2s

learnings:
  definitely use compression
  definitely ignore .svn
  definitely need to allow projects to customize ignore patterns
    (e.g. tools directory in atlanta)
  rsync is *very* efficient once the initial sync is done
    probably only need to rsync once before running tests
  cutting down total size of transfer 
    significantly affects initial sync
    doesn't significantly affect delta syncs


conclusion:
  rsync seems like a reasonable default option as a syncing strategy


*** DATABASE

* -- based on rsync learnings, why not put the mysql datadir in project
     directory (svn ignored of course) and rsync it!
 
time to create databases in ramdisk: 6.128s
time to reset databases in ramdisk: 29.7s
time to run functional tests against ramdisk: ... long

time to create databases in on disk: 5.2s
time to reset databases in on disk: 1m24s

* Local DeepTest (1.1.4), mini w/ 2 workers
trial 1: 225 seconds (test/unit), 245 seconds (unix time)
trial 2: 225 seconds (test/unit), 241 seconds (unix time)

* Local DeepTest (1.2.0), mini w/ 2 workers
trial 1: 207 seconds (test/unit), 220 seconds (unix time)
trial 2: 208 seconds (test/unit), 219 seconds (unix time)

* 1 minis, 1 workers per mini
trial 1: 292 seconds (test/unit), 331 seconds (unix time)
trial 2: 290 seconds (test/unit), 339 seconds (unix time)

* 2 minis, 1 worker per mini
trial 1: 254 seconds (test/unit), 305 seconds (unix time)
trial 2: 277 seconds (test/unit), 319 seconds (unix time)

* 2 minis, 2 workers per mini
trial 1: 135 seconds (test/unit), 185 seconds (unix time)
trial 2: 134 seconds (test/unit), 170 seconds (unix time)

* 2 minis, 2 workers per mini (ethernet instead of wireless)
trial 1: 118 seconds (test/unit), 152 seconds (unix time)
trial 2: 117 seconds (test/unit), 150 seconds (unix time)

